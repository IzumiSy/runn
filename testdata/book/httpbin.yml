desc: testing json request body
labels:
  - http
  - openapi3
runners:
  req:
    endpoint: ${HTTPBIN_END_POINT:-https://httpbin.org/}
    openapi3: https://tryapisproxy.com/spec/httpbin
debug: ${DEBUG:-true}
vars:
  args:
    var: "C++"
  jsonRequestBody:
    foo: "test"
    bar: 1
  arrayJsonRequestBody:
    -
      foo: "test1"
      bar: 1
    -
      foo: "test2"
      bar: 2
  external: json://../vars.json
  loopCount: 3
  loopVars:
    - "../vars.json"
    - "../vars_array.json"
    - "../template.json.template"
  wantBody:
    Content-Type: "application/json"
    freeform: "foo"
  foo: "test1"
  bar: 2
  zeroPrefixStr: "0123456789"
steps:
  -
    desc: Specify request contents by converting variables with built-in functions
    req:
      /get?var={{ urlencode(vars.args.var) }}:
        get:
          body: null
    test: |
      current.res.status == 200
      && current.res.body.args == vars.args
  -
    desc: Specify variables in the request body
    req:
      /post:
        post:
          body:
            application/json: "{{ vars.jsonRequestBody }}"
    test: |
      current.res.status == 200
      && current.res.body.json == vars.jsonRequestBody
  -
    desc: Specify array variables in the request body
    req:
      /put:
        put:
          body:
            application/json: "{{ vars.arrayJsonRequestBody }}"
    test: |
      current.res.status == 200
      && current.res.body.json == vars.arrayJsonRequestBody
  -
    desc: Evaluate response contents with variables
    req:
      /patch:
        patch:
          body:
            application/json: "{{ vars.external }}"
    test: |
      current.res.status == 200
      && current.res.body.json == vars.external
      && vars.external == vars.jsonRequestBody
  -
    desc: Parameters are changed and executed for the number of times specified by the variable
    loop: vars.loopCount
    req:
      /delete:
        delete:
          body:
            application/json:
              count: "{{ i }}"
    test: |
      current.res.status == 200
      && current.res.body.json.count == i
  -
    desc: The status code is retried until it reaches 200
    loop:
      count: 4
      until: 'steps[5].res.status == 200'
      minInterval: 0.5
      maxInterval: 10
    req:
      /status/{{ 200 + (100 * i) }}:
        get:
          body: null
    test: |
      current.res.status == (200 + (100 * i))
  -
    test: |
      steps[5].res.status == 200
  -
    desc: The include section is executed repeatedly
    loop:
      count: len(vars.loopVars)
    include:
      path: httpbin_include.yml
      vars:
        jsonRequestBody: 'json://{{ vars.loopVars[i] }}'
        counter: i
  -
    desc: All the same except Content-Length
    req:
      /response-headers?freeform={{ vars.wantBody.freeform }}:
        get:
          body: null
    test: |
      current.res.status == 200
      // Must be the same except for Content-Length
      && compare(current.res.body, vars.wantBody, "Content-Length")
  -
    desc: Returns GZip-encoded data.
    req:
      /gzip:
        get:
          headers:
            Accept-Encoding: deflate, gzip
          body: null
    test: |
      current.res.status == 200
      && current.res.headers["Content-Encoding"][0] == "gzip"
      && current.res.body.headers["Accept-Encoding"] == "deflate, gzip"
  -
    desc: Returns zero prefix string
    req:
      /delete:
        delete:
          body:
            application/json:
              str: "{{ vars.zeroPrefixStr }}"
    test: |
      current.res.status == 200
      && string(current.res.body.json.str)
      && current.res.body.json.str == "0123456789"
